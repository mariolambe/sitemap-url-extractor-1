{"ast":null,"code":"var _jsxFileName = \"/Users/mario.lambertucci/Desktop/sitemap-url-extractor-1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ChakraProvider, Box, VStack, Heading, Text, useToast, useColorMode, Button } from '@chakra-ui/react';\nimport { SunIcon, MoonIcon } from '@chakra-ui/icons';\nimport { SitemapForm } from './components/SitemapForm';\nimport { ResultsDisplay } from './components/ResultsDisplay';\nimport { About } from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [urls, setUrls] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const toast = useToast();\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const handleExtract = async sitemapUrl => {\n    setIsLoading(true);\n    setError(null);\n    setUrls([]);\n    try {\n      const response = await fetch('/.netlify/functions/extract', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sitemapUrl\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to fetch sitemap');\n      }\n      setUrls(data.urls);\n      toast({\n        title: 'URLs Extracted',\n        description: `Successfully extracted ${data.urls.length} URLs`,\n        status: 'success',\n        duration: 5000,\n        isClosable: true\n      });\n    } catch (err) {\n      setError(err.message);\n      toast({\n        title: 'Error',\n        description: err.message,\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      maxWidth: \"1200px\",\n      margin: \"auto\",\n      padding: 8,\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 8,\n        align: \"stretch\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h1\",\n            size: \"2xl\",\n            children: \"Sitemap URL Extractor \\uD83D\\uDE0E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: toggleColorMode,\n            children: colorMode === 'light' ? /*#__PURE__*/_jsxDEV(MoonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(SunIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          textAlign: \"center\",\n          children: \"Enter the URL of your sitemap XML file below and click \\\"Extract\\\" to get all URLs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SitemapForm, {\n          onSubmit: handleExtract,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResultsDisplay, {\n          urls: urls,\n          isLoading: isLoading,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Zj33bl9VZirun2l2lyvxTDrEvLw=\", false, function () {\n  return [useToast, useColorMode];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChakraProvider","Box","VStack","Heading","Text","useToast","useColorMode","Button","SunIcon","MoonIcon","SitemapForm","ResultsDisplay","About","jsxDEV","_jsxDEV","App","_s","urls","setUrls","isLoading","setIsLoading","error","setError","toast","colorMode","toggleColorMode","handleExtract","sitemapUrl","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","title","description","length","status","duration","isClosable","err","message","children","maxWidth","margin","padding","spacing","align","display","justifyContent","alignItems","as","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fontSize","textAlign","onSubmit","_c","$RefreshReg$"],"sources":["/Users/mario.lambertucci/Desktop/sitemap-url-extractor-1/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ChakraProvider, Box, VStack, Heading, Text, useToast, useColorMode, Button } from '@chakra-ui/react';\nimport { SunIcon, MoonIcon } from '@chakra-ui/icons';\nimport { SitemapForm } from './components/SitemapForm';\nimport { ResultsDisplay } from './components/ResultsDisplay';\nimport { About } from './components/About';\n\nfunction App() {\n  const [urls, setUrls] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const toast = useToast();\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const handleExtract = async (sitemapUrl) => {\n    setIsLoading(true);\n    setError(null);\n    setUrls([]);\n    try {\n      const response = await fetch('/.netlify/functions/extract', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ sitemapUrl }),\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to fetch sitemap');\n      }\n      setUrls(data.urls);\n      toast({\n        title: 'URLs Extracted',\n        description: `Successfully extracted ${data.urls.length} URLs`,\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n      });\n    } catch (err) {\n      setError(err.message);\n      toast({\n        title: 'Error',\n        description: err.message,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <ChakraProvider>\n      <Box maxWidth=\"1200px\" margin=\"auto\" padding={8}>\n        <VStack spacing={8} align=\"stretch\">\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Heading as=\"h1\" size=\"2xl\">\n              Sitemap URL Extractor ðŸ˜Ž\n            </Heading>\n            <Button onClick={toggleColorMode}>\n              {colorMode === 'light' ? <MoonIcon /> : <SunIcon />}\n            </Button>\n          </Box>\n          <Text fontSize=\"lg\" textAlign=\"center\">\n            Enter the URL of your sitemap XML file below and click \"Extract\" to get all URLs.\n          </Text>\n          <SitemapForm onSubmit={handleExtract} isLoading={isLoading} />\n          <ResultsDisplay urls={urls} isLoading={isLoading} error={error} />\n          <About />\n        </VStack>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}